// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(CIDMDbContext))]
    partial class CIDMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.MRCnnSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MRCnnSettings");
                });

            modelBuilder.Entity("Domain.Entities.Rect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MRCnnSettingId")
                        .HasColumnType("int");

                    b.Property<int>("x1")
                        .HasColumnType("int");

                    b.Property<int>("x2")
                        .HasColumnType("int");

                    b.Property<int>("y1")
                        .HasColumnType("int");

                    b.Property<int>("y2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MRCnnSettingId");

                    b.ToTable("Rects");
                });

            modelBuilder.Entity("Domain.Entities.Rect", b =>
                {
                    b.HasOne("Domain.Entities.MRCnnSetting", null)
                        .WithMany("Selected")
                        .HasForeignKey("MRCnnSettingId");
                });
#pragma warning restore 612, 618
        }
    }
}
