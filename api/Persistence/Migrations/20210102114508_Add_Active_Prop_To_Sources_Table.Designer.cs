// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(CIDMDbContext))]
    [Migration("20210102114508_Add_Active_Prop_To_Sources_Table")]
    partial class Add_Active_Prop_To_Sources_Table
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.MRCnnSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MRCnnSettings");
                });

            modelBuilder.Entity("Domain.Entities.Rect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StreamSourceId")
                        .HasColumnType("int");

                    b.Property<int>("x1")
                        .HasColumnType("int");

                    b.Property<int>("x2")
                        .HasColumnType("int");

                    b.Property<int>("y1")
                        .HasColumnType("int");

                    b.Property<int>("y2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StreamSourceId");

                    b.ToTable("Rects");
                });

            modelBuilder.Entity("Domain.Entities.StreamSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Current")
                        .HasColumnType("int");

                    b.Property<int>("Increment")
                        .HasColumnType("int");

                    b.Property<int>("MRCnnSettingId")
                        .HasColumnType("int");

                    b.Property<int>("Miliseconds")
                        .HasColumnType("int");

                    b.Property<bool>("Refresh")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MRCnnSettingId");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("Domain.Entities.Rect", b =>
                {
                    b.HasOne("Domain.Entities.StreamSource", null)
                        .WithMany("Selected")
                        .HasForeignKey("StreamSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.StreamSource", b =>
                {
                    b.HasOne("Domain.Entities.MRCnnSetting", null)
                        .WithMany("Sources")
                        .HasForeignKey("MRCnnSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
